name: naiveproxy
on:
  workflow_dispatch:
  schedule:
    - cron: "0 21 * * *"
  push:
    branches:
      - master
    paths:
      - naiveproxy/**
      - .github/workflows/naiveproxy.yml
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      # - name: Set variables
      #   run: |
      #     echo "VERSION=$(wget -qO- https://api.github.com/repos/klzgrad/naiveproxy/tags | grep 'name' | cut -d\" -f4 | head -1)" >> $GITHUB_ENV
      - name: Get latest release
        uses: rez0n/actions-github-release@main
        id: naive_release
        env:
          token: ${{ secrets.GITHUB_TOKEN }}
          repository: "klzgrad/naiveproxy"
          type: "latest"
      - name: Print release version
        env:
          release: ${{ steps.naive_release.outputs.release }}
          release_id: ${{ steps.naive_release.outputs.release_id }}
          browser_download_url: ${{ steps.naive_release.outputs.browser_download_url }}
        run: |
          echo "${{ env.release }}"
          echo "${{ env.release_id }}"
          echo "${{ env.browser_download_url }}"
      - name: Set up QEMU
        uses: docker/setup-qemu-action@master
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@master
      - name: Login to DockerHub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@master
        with:
          username: ${{ github.repository_owner }}
          password: ${{ secrets.PAT }}
      - name: Login to GitHub Container Registry
        uses: docker/login-action@master
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build
        uses: docker/build-push-action@master
        env:
          CONTEXT: ${{ github.workflow }}
          VERSION: ${{ steps.naive_release.outputs.release }}
        with:
          context: ./${{ env.CONTEXT}}
          file: ./${{ env.CONTEXT }}/Dockerfile
          platforms: linux/amd64
          push: ${{ github.event_name != 'pull_request' }}
          build-args: VERSION=${{ env.VERSION }}
          tags: |
            ghcr.io/zydou/${{ github.workflow }}:${{ env.VERSION }}
            ghcr.io/zydou/${{ github.workflow }}:latest
            zydou/${{ github.workflow }}:${{ env.VERSION }}
            zydou/${{ github.workflow }}:latest
      - name: Docker Hub Description
        uses: peter-evans/dockerhub-description@main
        with:
          username: ${{ github.repository_owner }}
          password: ${{ secrets.PAT }}
          repository: ${{ github.repository_owner }}/${{ github.workflow }}
          short-description: "Minimal naiveproxy client. (only 5MB)"
          readme-filepath: ${{ github.workflow }}/README.md
      - name: Delete untagged
        uses: dylanratcliffe/delete-untagged-containers@main
        with:
          package_name: ${{ github.workflow }}
          token: ${{ secrets.PAT }}
          user: ${{ github.repository_owner }}

  build-multi:
    runs-on: ubuntu-latest
    needs: ["build"]
    steps:
      - name: Checkout
        uses: actions/checkout@main
      # - name: Set variables
      #   run: |
      #     echo "VERSION=$(wget -qO- https://api.github.com/repos/klzgrad/naiveproxy/tags | grep 'name' | cut -d\" -f4 | head -1)" >> $GITHUB_ENV
      - name: Get latest release
        uses: rez0n/actions-github-release@main
        id: naive_release
        env:
          token: ${{ secrets.GITHUB_TOKEN }}
          repository: "klzgrad/naiveproxy"
          type: "latest"
      - name: Print release version
        env:
          release: ${{ steps.naive_release.outputs.release }}
          release_id: ${{ steps.naive_release.outputs.release_id }}
          browser_download_url: ${{ steps.naive_release.outputs.browser_download_url }}
        run: |
          echo "${{ env.release }}"
          echo "${{ env.release_id }}"
          echo "${{ env.browser_download_url }}"
      - name: Set up QEMU
        uses: docker/setup-qemu-action@master
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@master
      - name: Login to DockerHub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@master
        with:
          username: ${{ github.repository_owner }}
          password: ${{ secrets.PAT }}
      - name: Login to GitHub Container Registry
        uses: docker/login-action@master
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build
        uses: docker/build-push-action@v3
        env:
          CONTEXT: ${{ github.workflow }}
          VERSION: ${{ steps.naive_release.outputs.release }}
        with:
          context: ./${{ env.CONTEXT}}
          file: ./${{ env.CONTEXT }}/multi.Dockerfile
          platforms: linux/amd64
          push: ${{ github.event_name != 'pull_request' }}
          build-args: VERSION=${{ env.VERSION }}
          tags: |
            ghcr.io/zydou/${{ github.workflow }}:multi-${{ env.VERSION }}
            ghcr.io/zydou/${{ github.workflow }}:multi
            zydou/${{ github.workflow }}:multi-${{ env.VERSION }}
            zydou/${{ github.workflow }}:multi

      - name: Delete untagged
        uses: dylanratcliffe/delete-untagged-containers@main
        with:
          package_name: ${{ github.workflow }}
          token: ${{ secrets.PAT }}
          user: ${{ github.repository_owner }}